#Trigger when there is a push to main
name: Continuous Integration

on:
  push:
  
jobs:
  # Set up necessary installs
  Build_SetUp:
    name: Build SetUp
    runs-on: ubuntu-latest
    steps:
      - name: Set Up Go
        uses: actions/setup-go@v5  # Setup Go after checkout
        with:
          go-version: '~1.21.0'
      # [Edit] Retrieving from Development Repository
      - name: Checkout Development
        uses: actions/checkout@v4
        with:
          repository: DevOpsTeamB2023/DevOps_Oct2023_TeamB_Assignment
          
      - name: Go Mod Dependencies
        run: go mod download
  
  # Reference to Test Cases in repository
  Testing:
    name: Run Test Cases
    needs: Build_SetUp
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    # [Edit] Test Cases
    - name: Use Test Folder
      working-directory: ./tdd
      run: |
        go test -v -coverprofile=report.out ./...
      
    - name: Test
      uses: robherley/go-test-action@v0.1.0
      
    - name: Upload Coverage Report
      uses: actions/upload-artifact@v3
      with:
        name: TDD Coverage Report
        path: report.out

    # Upload TDD Results in https://app.codecov.io/gh/DevOpsTeamB2023/DevOps_Oct2023_TeamB_Assignment
    # - name: Upload coverage reports to Codecov
    #   uses: codecov/codecov-action@v3
    #   env:
    #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    #     flags: unittests
    #     env: TEST_ENV

    # - name: Create Codecov Annotation
    #   uses: actions/github-script@v4
    #   with:
    #     script: |
    #       github.actions.addAnnotations('codecov', {
    #           message: 'Codecov report available: https://codecov.io/gh/${{ github.repository }}/branch/${{ github.ref }}'
    #       })

    # - name: Fail on Upload
    #   if: failure()
    #   run: exit 1 # Stop workflow on test failure
      
    # Create Issue for Failed Workflow
    # - if: ${{ failure() }}
    #   name: Create Issue on Failed workflow
    #   uses: dacbd/create-issue-action@main
    #   with:
    #     token: ${{ github.token }}
    #     title: Issue - `${{ github.workflow }}` failed.
    #     body: |
    #       [Failed Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
    #       [Codebase](https://github.com/${{ github.repository }}/tree/${{ github.sha }})
    #       Workflow name - `${{ github.workflow }}`
    #       Job -           `${{ github.job }}`
    #       status -        `${{ job.status }}`
    #       assignees: `${{ github.actor }}`
    #     assignees: lacsadoshaniahsantiago, koayyiting
    
    # [Edit] Check tdd directory
    - name: Display tdd directory and content
      run: |
        ls -la tdd          # List contents
        cat tdd/report.out  # Print contents of report.out
    
  Test_Fail:
    name: Test Cases Fail
    needs: Testing
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
      - name: Download Remote Test Results
        uses: actions/download-artifact@v2
        with:
          name: testResults
          path: testresults
          
      - name: Check for Failed Tests
        id: get_fails_test
        run: |
          FAILED_TESTS=$(cat testresults/coverage.out | grep -E "FAIL\|error")
          if [[ -n "$FAILED_TESTS" ]]; then
            echo "Failed tests found: $FAILED_TESTS"
            echo "fail=$FAILED_TESTS" >> $GIHUB_ENV
            exit 1
          else
            echo "All tests passed."
          fi
          echo "Contents of report.out:"
          cat testresults/report.out
          echo "Failed tests count: ${{ steps.get_fails_test.outputs.fail }}"

      # Create Issue for Fail Tests
      # - name: Create Issue on Test Failure
      #   if: ${{ failure() }}  # Only runs if the "Check Test Results" step failed
      #   uses: dacbd/create-issue-action@main
      #   with:
      #     token: ${{ github.token }}
      #     title: "Tests Failed in ${{ github.workflow }} "
      #     body: |
      #       **Failed tests have been detected.**

      #       [Failed Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
      #       [Test Results Artifact](https://github.com/${{ github.repository }}/actions/artifacts/${{ github.run_id }}/download?name=testResults)

      #       **Please investigate and address the failures.**
      #     assignees: ${{ github.actor }}

  # Showcase Test Results
  Test_Display:
    name: Save Test Results
    needs: Testing
    runs-on: ubuntu-latest
    steps:
    - name: Download Remote Test Results
      uses: actions/download-artifact@v2
      with:
        name: testResults

    - name: Publish Test Results
      if: always()
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: testresults/report.out
