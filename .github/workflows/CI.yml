#Trigger when there is a push to main
name: Continuous Integration

on:
  pull_request:
    types: [closed]
    branches:
      - main
  push:
    branches:
      - main
    
jobs:
  # Set up necessary installs
  Build_SetUp:
    name: Build SetUp
    uses: ./.github/workflows/BuildingSetUp.yml

  # Reference to Test Cases in repository
  Testing:
    name: Run Test Cases
    needs: Build_SetUp
    runs-on: ubuntu-latest
    steps:
    # Run installation of pytest in Testing from BuildingSetUp.yml
    - name: Check PyTest Installation
      if: ${{ ! needs.Build_SetUp.outputs.pytest_installed }}
      run: pip install pytest pytest-cov

    # [Edit] Retrieving from Development Repository
    - name: Checkout Development
      uses: actions/checkout@v4
      with:
        fetch: --depth=1 # Reduces clone size
        repository: DevOpsTeamB2023/DevOps_Oct2023_TeamB_Development

    # [Edit] Retrieving from Testing Repository
    - name: Checkout Testing
      uses: actions/checkout@v4
      with:
        fetch: --depth=1 # Reduces clone size
        repository: DevOpsTeamB2023/DevOps_Oct2023_TeamB_Testing

    # [Edit] Retrieve Test Cases from tdd folder and Code from microservices folder
    - name: Use Test Cases
      if: always()
      run: |
        cd $GITHUB_WORKSPACE/tdd
        pytest -v --cov=../microservices --junitxml=report.xml

    # [Edit] Refering to tdd directory
    - name: Display testcase directory and content
      run: |
        ls -la tdd           # List contents of tdd directory
        cat testcase/report.xml   # Print contents of report.xml

    # Fail Test, Create Issue
    - if: ${{ failure() }}
      name: Create Issue on Failed workflow
      uses: dacbd/create-issue-action@main
      with:
        token: ${{ github.token }}
        title: Issue - `${{ github.workflow }}` failed.
        body: |
          [Failed Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          [Codebase](https://github.com/${{ github.repository }}/tree/${{ github.sha }})
          Workflow name - `${{ github.workflow }}`
          Job -           `${{ github.job }}`
          status -        `${{ job.status }}`
          assignees: `${{ github.actor }}`
        assignees: ${{ github.actor }}

    # [Edit] Create testresults directory and move test results in new directory
    - name: Create Test Results Folder
      run: |
        mkdir testresults
        if [[ -f tdd/report.xml ]]; then    #Check if report exists
          mv tdd/report.xml ./testresults
        else
          echo "report.xml not found in testcase directory."
          exit 1 #Exit with an error code
        fi
    
    # Upload test results into as artifact
    - name: Upload Test Results
      uses: actions/upload-artifact@v2
      with: 
        name: testResults
        path: testresults

  # Showcase Test Results
  Test_Results:
    name: Save Test Results
    needs: Testing
    runs-on: ubuntu-latest
    steps:
    
    - name: Download Remote Test Results
      uses: actions/download-artifact@v2
      with:
        name: testResults

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action/composite@v2
      if: always()
      with:
        junit_files: "report.xml"
