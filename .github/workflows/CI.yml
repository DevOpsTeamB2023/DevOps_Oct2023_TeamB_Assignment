#Trigger when there is a push to main
name: Continuous Integration
on:
  push:
  
jobs:
  # Set up necessary installs
  Build_SetUp_and_Test_TDD:
    name: Build and Test for TDD
    runs-on: ubuntu-latest
    steps:
    - name: Set Up Go
      uses: actions/setup-go@v5  # Setup Go after checkout
      with:
        go-version: '1.21.x'
        cache-dependency-path: subdir/go.sum

    # [Edit] Retrieving from Development Repository
    - name: Checkout Development
      uses: actions/checkout@v4
      
    - name: Install Dependencies
      run: |
        go mod download

    - name: Run TDD Test
      uses: robherley/go-test-action@v0.1.0

    # Create Issue on Fail TDD Tests
    - name: Create Issue on TDD Test Failure
      if: ${{ failure() }}
      uses: dacbd/create-issue-action@main
      with:
        token: ${{ github.token }}
        title: "TDD Fail Tests in ${{ github.workflow }} "
        body: |
          **Failed tests have been detected.**
          [Test Results Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          
          **Please investigate and address the failures.**
        assignees: ${{ github.actor }}

    #Notify Discord Channel
    - name: Error Discord Notification
      if: ${{ failure() }}
      uses: rjstone/discord-webhook-notify@v1
      with:
          severity: error
          details: Go Tests Fail
          webhookUrl: ${{ secrets.CI_DISCORD_WEBHOOK_URL }}


  Test_BDD:
    name: Testing BDD
    needs: Build_SetUp_and_Test_TDD
    if: ${{ success() }}
    runs-on: ubuntu-latest
    services:
      mysql:
        image: koayyiting/mysql_test:latest
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: can_we_still_score_for_dop
    steps:
    # Build and run MySQL container and detach
    - name: Start MySQL Container
      run: docker run --name mysql_container -d koayyiting/mysql_test:latest

    # Test DB if working
    - name: Wait MySQL To Start
      run: |
        sleep 10
        
        docker exec mysql_container sh -c 'mysql -u root -p"${MYSQL_ROOT_PASSWORD}" -e "SHOW DATABASES;"'
        docker exec mysql_container sh -c 'mysql -u root -p"${MYSQL_ROOT_PASSWORD}" -e "USE record_db; SHOW TABLES;"'

    - name: Checkout Test Repo
      uses: actions/checkout@v2
      with:
        repository: DevOpsTeamB2023/DevOps_Oct2023_TeamB_Testing

    - name: Run BDD tests
      uses: joonvena/robotframework-docker-action@v1.0
      with:
        robot_tests_dir: TestCases

   # Create Issue on Fail BDD Tests
    - name: Create Issue on BDD Test Failure
      if: ${{ failure() }}
      uses: dacbd/create-issue-action@main
      with:
        token: ${{ github.token }}
        title: "BDD Fail Tests in ${{ github.workflow }} "
        body: |
          **Failed tests have been detected.**
          [Test Results Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          
          **Please investigate and address the failures.**
        assignees: luketeran, ${{ github.actor }}


    #Notify Discord Channel
    - name: Error Discord Notification
      if: ${{ failure() }}
      uses: rjstone/discord-webhook-notify@v1
      with:
          severity: error
          details: Behaviour Tests Fail
          webhookUrl: ${{ secrets.CI_DISCORD_WEBHOOK_URL }}
        
    - name: Upload BDD Test Report
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: reports
        path: reports

  BDD_Report:
    name: BDD Report
    needs: Test_BDD
    if: always()
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Download test report
      uses: actions/download-artifact@v1
      with:
        name: reports

    - name: Send Report to Commit
      uses: joonvena/robotframework-reporter-action@v2.3
      with:
        gh_access_token: ${{ secrets.GITHUB_TOKEN }}
        
  Notify_Discord:
    runs-on: ubuntu-latest
    needs: BDD_Report
    steps:
      - name: Successful Discord Notification
        uses: rjstone/discord-webhook-notify@v1
        with:
            severity: info
            color: '#ff00aa'
            username: Mr CI
            avatarUrl: https://www.pngwing.com/en/free-png-yxnja
            description: Success ${{ github.workflow }} Workflow from ${{ github.ref_name }}
            details: '(https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})'
            footer: By ${{ github.actor }}
            webhookUrl: ${{ secrets.CI_DISCORD_WEBHOOK_URL }}
