# Triggered by any pull request from repository
name: Pull Request

on:
  pull_request:
  pull_request_review:
    types:
      - submitted

jobs:
  Requests_Build:
    uses: ./.github/workflows/BuildingSetUp.yml # Reusable workflow

  Requests_AddReviewer:
    name: Adding Reviewer
    needs: Requests_Build
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Reviewer
        id: toadd_reviewers
        # Defines Reviewer = (default) Technical Lead | Developer review Technical Lead
        run: |
          AUTHOR=${{ github.event.pull_request.user.login }}
          if [ "$AUTHOR" == "koayyiting" ]; then
            REVIEWERS="ng-zi-yi"
          else
            REVIEWERS="koayyiting"
          fi
          echo "REVIEWERS=$REVIEWERS" >> $GITHUB_ENV
          echo " ${REVIEWERS} " 

      # Add Reviewer to Pull Request
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Add Reviewers
        uses: madrapps/add-reviewers@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          reviewers: ${{ env.REVIEWERS }}
          re-request-when-changes-requested: true
          re-request-when-approved: true

      # Create Issue for Failed Workflow
      - if: ${{ failure() }}
        name: Create Issue on Failed workflow
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ github.token }}
          title: Issue - `${{ github.workflow }}` failed.
          body: |
            [Failed Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            [Codebase](https://github.com/${{ github.repository }}/tree/${{ github.sha }})
            Workflow name - `${{ github.workflow }}`
            Job -           `${{ github.job }}`
            status -        `${{ job.status }}`
            assignees: `${{ github.actor }}`
          assignees: lacsadoshaniahsantiago, koayyiting
          
  Response_Review:
    name: Approve Review and Merge
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_review'
    steps:
      # Retrieve Reviews approved
      - name: Get Review Status
        id: get_reviews
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          REVIEWS=$(curl -sSL -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}/reviews")

          echo "$REVIEWS" | jq -r '.[] | select(.state == "APPROVED")'
          APPROVED_N=0
          for REVIEW in $(echo "$REVIEWS" | jq -r '.[].state'); do
            if [[ $REVIEW == "APPROVED" ]]; then
              ((APPROVED_N+=1))
            fi
          done
          echo "APPROVED_N=$APPROVED_N" >> $GITHUB_ENV
          echo "Approved reviews count: $APPROVED_N"
      - name: Check Environment Approve
        run: |
          echo " Approved N ENV: ${{ env.APPROVED_N }}
          
      # Review Request for Changes Workflow
      - name: Request for Changes
        if: github.event.review.state == 'changes_requested'
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get Changed Files
        if: github.event.review.state == 'changes_requested'
        id: changed-markdown-files
        uses: tj-actions/changed-files@v42
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-markdown-files.outputs.all_changed_files }}

      # Create Issue for Request Changes
      - name: Create Issue for Failed Test
        if: github.event.review.state == 'changes_requested'
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ github.token }}
          title: "[REQUEST CHANGES] PR#${{ github.event.pull_request.number }} "
          body: |
            **Files Changed -**
            
            [${{ steps.changed-markdown-files.outputs.all_changed_files }}](https://github.com/${{ github.repository }}/tree/${{ github.event.pull_request.head.ref }}/${{ steps.changed-markdown-files.outputs.all_changed_files }})
            
            [View Code on GitHub](https://github.com/${{ github.repository }}/tree/${{ github.event.pull_request.head.ref }})
            
            **Comment -**
            ${{ github.event.review.body }}
          assignees: ${{ github.event.pull_request.user.login }}

  # Review Approved Workflow
  Merge_Request:
    name: Merge Pull Request
    needs: Response_Review
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check Status of Review
        run: |
          REVIEW_N=${{ env.APPROVED_N }}
          if [[ REVIEW_N -ge 1 ]]; then
            echo "Approved Reviews Count: ${REVIEW_N}"
          else
            echo "There is no approved reviews. Do not continue next steps" 
            exit 1
          fi
      
    # # Retrieve Pull Request status of checks
    #   - uses: actions/checkout@v4
    #   - name: Get Check Status
    #     if: ${{ success() }}
    #     uses: danieldeichfuss/get-status@v0.0.10
    #     id: get-status
    #     with:
    #       ref: ${{ github.sha }}
    #       token: ${{ secrets.GITHUB_TOKEN }}

    #   # Add automerge label to be able to run pascalgn/automerge-action@v0.16.2 successfully 
    #   - uses: actions/checkout@v3
    #   - name: Label Pull Request as automerge
    #     uses: actions-ecosystem/action-add-labels@v1
    #     if: ${{ success() }} && ${{ steps.get-status.outputs.all-checks-completed == 'true' && steps.get-status.outputs.all-checks-passed == 'true' }} && ${{ startsWith(github.event.comment.body, '/add-labels') }}
    #     with:
    #       labels: automerge

      # Merge Pull Request action 
      - uses: actions/checkout@v4
      - name: Auto Merge Pull Request
        if: ${{ success() }}
        # uses: "pascalgn/automerge-action@v0.16.2"
        # env:
        #   GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        # with:
        #   merge_commit_message: "${{ github.event.pull_request.number }} - Merged PR#${{ github.event.pull_request.number }} "
        #   merge_method: merge
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.pulls.merge({
              owner: ${{ github.event.repository.owner.login }},
              repo: ${{ github.event.repository.name }},
              pull_number: ${{ github.event.pull_request.number }},  // Get PR number from the created PR
              merge_method: "merge"
            })
