# Triggered by any pull request to main repository
name: Pull Request

on:
  pull_request:
    branches:
      - main
  pull_request_review:
    types:
      - submitted
jobs:
  Build_SetUp_and_Test_TDD:
    name: Build and Test for TDD
    runs-on: ubuntu-latest
    steps:
    - name: Set Up Go
      uses: actions/setup-go@v5  # Setup Go after checkout
      with:
        go-version: '1.21.x'
        cache-dependency-path: subdir/go.sum

    # [Edit] Retrieving from Development Repository
    - name: Checkout Development
      uses: actions/checkout@v4
      
    - name: Install Dependencies
      run: |
        go mod download

  Test_BDD:
    name: BDD Test
    needs: Build_SetUp_and_Test_TDD
    if: ${{ success() }}
    runs-on: ubuntu-latest
    services:
      mysql:
        image: koayyiting/mysql_test:latest
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: can_we_still_score_for_dop
    steps:
    # Build and run MySQL container and detach
    - name: Start MySQL Container
      run: docker run --name mysql_container -d koayyiting/mysql_test:latest

    # Test DB if working
    - name: Wait MySQL To Start
      run: |
        sleep 10
        
        docker exec mysql_container sh -c 'mysql -u root -p"${MYSQL_ROOT_PASSWORD}" -e "SHOW DATABASES;"'
        docker exec mysql_container sh -c 'mysql -u root -p"${MYSQL_ROOT_PASSWORD}" -e "USE record_db; SHOW TABLES;"'

    - name: Checkout Test Repo
      uses: actions/checkout@v2
      with:
        repository: DevOpsTeamB2023/DevOps_Oct2023_TeamB_Testing

    - name: Run BDD tests
      uses: joonvena/robotframework-docker-action@v1.0
      with:
        robot_tests_dir: TestCases

   # Create Issue on Fail BDD Tests
    - name: Create Issue on BDD Test Failure
      if: ${{ failure() }}
      uses: dacbd/create-issue-action@main
      with:
        token: ${{ github.token }}
        title: "BDD Fail Tests in ${{ github.workflow }} "
        body: |
          **Failed tests have been detected.**
          [Test Results Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          
          **Please investigate and address the failures.**
        assignees: luketeran, ${{ github.actor }}

    #Notify Discord Channel
    - name: Request Change Discord
      run: |
        curl -X POST -H "Content-Type: application/json" -d '{
          "embeds": [
            {
              "title": " BDD Fail for **PR #${{ github.event.number }}: ${{ github.event.pull_request.title }}**",
              "description": " Please review and address the fail tests for PR #${{ github.event.number }}.\nSee details on GitHub: https://github.com/${{ github.repository }}/pull/{{ github.event.number }}",
              "color": #ec9733,
              "footer": {
                "text": "GitHub Action Notification | Timestamp: ${{ github.event.created_at }}"
              }
            }
          ]
        }' ${{ secrets.PR_DISCORD_WEBHOOK_URL }}
        
    - name: Upload BDD Test Report
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: reports
        path: reports
        
  BDD_Report:
      name: BDD Report
      needs: Test_BDD
      if: always()
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: Download test report
          uses: actions/download-artifact@v1
          with:
            name: reports
      
        - name: Send Report to Commit
          uses: joonvena/robotframework-reporter-action@v2.3
          with:
            gh_access_token: ${{ secrets.GITHUB_TOKEN }}

  Requests_AddReviewer:
    name: Adding Reviewer
    needs: Test_BDD
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
      - name: Reviewer
        id: toadd_reviewers
        # Defines Reviewer = (default) Technical Lead | Developer review Technical Lead
        run: |
          AUTHOR=${{ github.event.pull_request.user.login }}
          if [ "$AUTHOR" == "koayyiting" ]; then
            REVIEWERS="ng-zi-yi"
          else
            REVIEWERS="koayyiting"
          fi
          echo "REVIEWERS=$REVIEWERS" >> $GITHUB_ENV
          echo " ${REVIEWERS} " 

      # Add Reviewer to Pull Request
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Add Reviewers
        uses: madrapps/add-reviewers@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          reviewers: ${{ env.REVIEWERS }}
          re-request-when-changes-requested: true
          re-request-when-approved: true
          
  RequestChange_Review:
    name: Request Change
    needs: Requests_AddReviewer
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_review' && github.event.review.state == 'changes_requested'
    steps:
      # Review Request for Changes Workflow
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get Changed Files
        id: changed-markdown-files
        uses: tj-actions/changed-files@v42
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-markdown-files.outputs.all_changed_files }}

      # Create Issue for Request Changes
      - name: Create Issue for Failed Test
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ github.token }}
          title: "[REQUEST CHANGES] PR#${{ github.event.pull_request.number }} "
          body: |
            **Files Changed -**
            
            [${{ steps.changed-markdown-files.outputs.all_changed_files }}](https://github.com/${{ github.repository }}/tree/${{ github.event.pull_request.head.ref }}/${{ steps.changed-markdown-files.outputs.all_changed_files }})
            
            [View Code on GitHub](https://github.com/${{ github.repository }}/tree/${{ github.event.pull_request.head.ref }})
            
            **Comment -**
            ${{ github.event.review.body }}
          assignees: ${{ github.event.pull_request.user.login }}
          
      - name: Request Change Discord
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{
            "embeds": [
              {
                "title": " Changes Requested for **PR #${{ github.event.number }}: ${{ github.event.pull_request.title }}**",
                "description": " **${{ github.event.pull_request.user.login }}**, Please review and address the feedback for PR #${{ github.event.number }}.\nKey changes: ${{ github.event.pull_request.body | truncate(150, true, "...") }}  \nSee details on GitHub: https://github.com/${{ github.repository }}/pull/{{ github.event.number }}",
                "color": #ef4149,
                "footer": {
                  "text": "GitHub Action Notification | Timestamp: ${{ github.event.created_at }}"
                }
              }
            ]
          }' ${{ secrets.PR_DISCORD_WEBHOOK_URL }}
          
  Approved_Review:
    name: Approved Review
    needs: Requests_AddReviewer
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_review' && github.event.review.state == 'approved'
    steps:
      - name: Merge Pull Request
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pullNumber = context.payload.pull_request.number;
            const baseRef = context.payload.pull_request.base.ref;
            const headRef = context.payload.pull_request.head.ref;

            github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pullNumber,
              commit_title: `Merge PR#${pullNumber} from ${baseRef} to ${headRef}`,
            });

      - name: Approved Discord
        if: ${{ success() }}
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{
            "embeds": [
              {
                "title": " Approved and Merged **PR #${{ github.event.number }}: ${{ github.event.pull_request.title }}**",
                "description": "See details on GitHub: https://github.com/${{ github.repository }}/pull/{{ github.event.number }}",
                "color": #ff00aa,
                "footer": {
                  "text": "GitHub Action Notification | Timestamp: ${{ github.event.created_at }}"
                }
              }
            ]
          }' ${{ secrets.PR_DISCORD_WEBHOOK_URL }}
