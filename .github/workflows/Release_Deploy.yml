#Release/Deployment 
name: Release/Deployment  
on:
  push:
  #workflow_run:
    #workflows:
      #- "PullRequest"
    #types:
      #- completed

jobs:
  # Set up necessary installs
  Build_SetUp_and_TDD:
    name: Build SetUp
    runs-on: ubuntu-latest
    services:
      mysql:
        image: koayyiting/mysql_test:latest
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: can_we_still_score_for_dop
    steps:
    - name: Set Up Go
      uses: actions/setup-go@v5  # Setup Go after checkout
      with:
        go-version: '1.21.x'
        cache-dependency-path: subdir/go.sum

  #Testing
    
  #Create Git Release
  Create_Git_Release:
    needs: Build_SetUp_and_TDD
    name: Create Git Release
    runs-on: ubuntu-latest
    steps:
      - name: Get version from text file
        id: get_version
        run: |
          VERSION=$(cat version.txt | sed 's/ //g')
          echo "::set-output name=version::${VERSION}"

      - name: Create a release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          release_tag: v${{ steps.get_version.outputs.version }}
        with:
          tag_name: ${{ env.release_tag }}
          
  Notify_Discord:
    runs-on: ubuntu-latest
    needs: Create_Git_Release
    steps:
      - name: Successful Discord Notification
        uses: rjstone/discord-webhook-notify@v1
        with:
            severity: info
            color: '#ff00aa'
            username: Mr CI
            avatarUrl: https://www.pngwing.com/en/free-png-yxnja
            description: Success ${{ github.workflow }} Workflow from ${{ github.ref_name }}
            details: '(https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})'
            footer: By ${{ github.actor }}
            webhookUrl: ${{ secrets.CI_DISCORD_WEBHOOK_URL }}
